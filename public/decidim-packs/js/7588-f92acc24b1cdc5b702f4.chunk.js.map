{"version":3,"file":"js/7588-f92acc24b1cdc5b702f4.chunk.js","mappings":"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","sources":["webpack://app/./node_modules/@graphiql/react/dist/lint.es2.js"],"sourcesContent":["import { C as CodeMirror } from \"./codemirror.es.js\";\nimport { GraphQLNonNull, GraphQLList, GraphQLInputObjectType, GraphQLEnumType, GraphQLScalarType } from \"graphql\";\nimport \"./index.es.js\";\nimport \"react\";\nimport \"react-dom\";\nfunction jsonParse(str) {\n  string = str;\n  strLen = str.length;\n  start = end = lastEnd = -1;\n  ch();\n  lex();\n  const ast = parseObj();\n  expect(\"EOF\");\n  return ast;\n}\nlet string;\nlet strLen;\nlet start;\nlet end;\nlet lastEnd;\nlet code;\nlet kind;\nfunction parseObj() {\n  const nodeStart = start;\n  const members = [];\n  expect(\"{\");\n  if (!skip(\"}\")) {\n    do {\n      members.push(parseMember());\n    } while (skip(\",\"));\n    expect(\"}\");\n  }\n  return {\n    kind: \"Object\",\n    start: nodeStart,\n    end: lastEnd,\n    members\n  };\n}\nfunction parseMember() {\n  const nodeStart = start;\n  const key = kind === \"String\" ? curToken() : null;\n  expect(\"String\");\n  expect(\":\");\n  const value = parseVal();\n  return {\n    kind: \"Member\",\n    start: nodeStart,\n    end: lastEnd,\n    key,\n    value\n  };\n}\nfunction parseArr() {\n  const nodeStart = start;\n  const values = [];\n  expect(\"[\");\n  if (!skip(\"]\")) {\n    do {\n      values.push(parseVal());\n    } while (skip(\",\"));\n    expect(\"]\");\n  }\n  return {\n    kind: \"Array\",\n    start: nodeStart,\n    end: lastEnd,\n    values\n  };\n}\nfunction parseVal() {\n  switch (kind) {\n    case \"[\":\n      return parseArr();\n    case \"{\":\n      return parseObj();\n    case \"String\":\n    case \"Number\":\n    case \"Boolean\":\n    case \"Null\":\n      const token = curToken();\n      lex();\n      return token;\n  }\n  expect(\"Value\");\n}\nfunction curToken() {\n  return { kind, start, end, value: JSON.parse(string.slice(start, end)) };\n}\nfunction expect(str) {\n  if (kind === str) {\n    lex();\n    return;\n  }\n  let found;\n  if (kind === \"EOF\") {\n    found = \"[end of file]\";\n  } else if (end - start > 1) {\n    found = \"`\" + string.slice(start, end) + \"`\";\n  } else {\n    const match = string.slice(start).match(/^.+?\\b/);\n    found = \"`\" + (match ? match[0] : string[start]) + \"`\";\n  }\n  throw syntaxError(`Expected ${str} but found ${found}.`);\n}\nfunction syntaxError(message) {\n  return { message, start, end };\n}\nfunction skip(k) {\n  if (kind === k) {\n    lex();\n    return true;\n  }\n}\nfunction ch() {\n  if (end < strLen) {\n    end++;\n    code = end === strLen ? 0 : string.charCodeAt(end);\n  }\n  return code;\n}\nfunction lex() {\n  lastEnd = end;\n  while (code === 9 || code === 10 || code === 13 || code === 32) {\n    ch();\n  }\n  if (code === 0) {\n    kind = \"EOF\";\n    return;\n  }\n  start = end;\n  switch (code) {\n    case 34:\n      kind = \"String\";\n      return readString();\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      kind = \"Number\";\n      return readNumber();\n    case 102:\n      if (string.slice(start, start + 5) !== \"false\") {\n        break;\n      }\n      end += 4;\n      ch();\n      kind = \"Boolean\";\n      return;\n    case 110:\n      if (string.slice(start, start + 4) !== \"null\") {\n        break;\n      }\n      end += 3;\n      ch();\n      kind = \"Null\";\n      return;\n    case 116:\n      if (string.slice(start, start + 4) !== \"true\") {\n        break;\n      }\n      end += 3;\n      ch();\n      kind = \"Boolean\";\n      return;\n  }\n  kind = string[start];\n  ch();\n}\nfunction readString() {\n  ch();\n  while (code !== 34 && code > 31) {\n    if (code === 92) {\n      code = ch();\n      switch (code) {\n        case 34:\n        case 47:\n        case 92:\n        case 98:\n        case 102:\n        case 110:\n        case 114:\n        case 116:\n          ch();\n          break;\n        case 117:\n          ch();\n          readHex();\n          readHex();\n          readHex();\n          readHex();\n          break;\n        default:\n          throw syntaxError(\"Bad character escape sequence.\");\n      }\n    } else if (end === strLen) {\n      throw syntaxError(\"Unterminated string.\");\n    } else {\n      ch();\n    }\n  }\n  if (code === 34) {\n    ch();\n    return;\n  }\n  throw syntaxError(\"Unterminated string.\");\n}\nfunction readHex() {\n  if (code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102) {\n    return ch();\n  }\n  throw syntaxError(\"Expected hexadecimal digit.\");\n}\nfunction readNumber() {\n  if (code === 45) {\n    ch();\n  }\n  if (code === 48) {\n    ch();\n  } else {\n    readDigits();\n  }\n  if (code === 46) {\n    ch();\n    readDigits();\n  }\n  if (code === 69 || code === 101) {\n    code = ch();\n    if (code === 43 || code === 45) {\n      ch();\n    }\n    readDigits();\n  }\n}\nfunction readDigits() {\n  if (code < 48 || code > 57) {\n    throw syntaxError(\"Expected decimal digit.\");\n  }\n  do {\n    ch();\n  } while (code >= 48 && code <= 57);\n}\nCodeMirror.registerHelper(\"lint\", \"graphql-variables\", (text, options, editor) => {\n  if (!text) {\n    return [];\n  }\n  let ast;\n  try {\n    ast = jsonParse(text);\n  } catch (syntaxError2) {\n    if (syntaxError2.stack) {\n      throw syntaxError2;\n    }\n    return [lintError(editor, syntaxError2, syntaxError2.message)];\n  }\n  const variableToType = options.variableToType;\n  if (!variableToType) {\n    return [];\n  }\n  return validateVariables(editor, variableToType, ast);\n});\nfunction validateVariables(editor, variableToType, variablesAST) {\n  const errors = [];\n  variablesAST.members.forEach((member) => {\n    var _a;\n    if (member) {\n      const variableName = (_a = member.key) === null || _a === void 0 ? void 0 : _a.value;\n      const type = variableToType[variableName];\n      if (!type) {\n        errors.push(lintError(editor, member.key, `Variable \"$${variableName}\" does not appear in any GraphQL query.`));\n      } else {\n        validateValue(type, member.value).forEach(([node, message]) => {\n          errors.push(lintError(editor, node, message));\n        });\n      }\n    }\n  });\n  return errors;\n}\nfunction validateValue(type, valueAST) {\n  if (!type || !valueAST) {\n    return [];\n  }\n  if (type instanceof GraphQLNonNull) {\n    if (valueAST.kind === \"Null\") {\n      return [[valueAST, `Type \"${type}\" is non-nullable and cannot be null.`]];\n    }\n    return validateValue(type.ofType, valueAST);\n  }\n  if (valueAST.kind === \"Null\") {\n    return [];\n  }\n  if (type instanceof GraphQLList) {\n    const itemType = type.ofType;\n    if (valueAST.kind === \"Array\") {\n      const values = valueAST.values || [];\n      return mapCat(values, (item) => validateValue(itemType, item));\n    }\n    return validateValue(itemType, valueAST);\n  }\n  if (type instanceof GraphQLInputObjectType) {\n    if (valueAST.kind !== \"Object\") {\n      return [[valueAST, `Type \"${type}\" must be an Object.`]];\n    }\n    const providedFields = /* @__PURE__ */ Object.create(null);\n    const fieldErrors = mapCat(valueAST.members, (member) => {\n      var _a;\n      const fieldName = (_a = member === null || member === void 0 ? void 0 : member.key) === null || _a === void 0 ? void 0 : _a.value;\n      providedFields[fieldName] = true;\n      const inputField = type.getFields()[fieldName];\n      if (!inputField) {\n        return [\n          [\n            member.key,\n            `Type \"${type}\" does not have a field \"${fieldName}\".`\n          ]\n        ];\n      }\n      const fieldType = inputField ? inputField.type : void 0;\n      return validateValue(fieldType, member.value);\n    });\n    Object.keys(type.getFields()).forEach((fieldName) => {\n      if (!providedFields[fieldName]) {\n        const fieldType = type.getFields()[fieldName].type;\n        if (fieldType instanceof GraphQLNonNull) {\n          fieldErrors.push([\n            valueAST,\n            `Object of type \"${type}\" is missing required field \"${fieldName}\".`\n          ]);\n        }\n      }\n    });\n    return fieldErrors;\n  }\n  if (type.name === \"Boolean\" && valueAST.kind !== \"Boolean\" || type.name === \"String\" && valueAST.kind !== \"String\" || type.name === \"ID\" && valueAST.kind !== \"Number\" && valueAST.kind !== \"String\" || type.name === \"Float\" && valueAST.kind !== \"Number\" || type.name === \"Int\" && (valueAST.kind !== \"Number\" || (valueAST.value | 0) !== valueAST.value)) {\n    return [[valueAST, `Expected value of type \"${type}\".`]];\n  }\n  if (type instanceof GraphQLEnumType || type instanceof GraphQLScalarType) {\n    if (valueAST.kind !== \"String\" && valueAST.kind !== \"Number\" && valueAST.kind !== \"Boolean\" && valueAST.kind !== \"Null\" || isNullish(type.parseValue(valueAST.value))) {\n      return [[valueAST, `Expected value of type \"${type}\".`]];\n    }\n  }\n  return [];\n}\nfunction lintError(editor, node, message) {\n  return {\n    message,\n    severity: \"error\",\n    type: \"validation\",\n    from: editor.posFromIndex(node.start),\n    to: editor.posFromIndex(node.end)\n  };\n}\nfunction isNullish(value) {\n  return value === null || value === void 0 || value !== value;\n}\nfunction mapCat(array, mapper) {\n  return Array.prototype.concat.apply([], array.map(mapper));\n}\n"],"names":["string","strLen","start","end","lastEnd","code","kind","parseObj","nodeStart","members","expect","skip","push","parseMember","key","curToken","value","parseVal","values","parseArr","token","lex","JSON","parse","slice","str","found","match","syntaxError","message","k","ch","charCodeAt","readHex","readString","readDigits","readNumber","validateValue","type","valueAST","ofType","itemType","mapCat","item","providedFields","Object","create","fieldErrors","member","_a","fieldName","inputField","getFields","keys","forEach","name","parseValue","lintError","editor","node","severity","from","posFromIndex","to","array","mapper","Array","prototype","concat","apply","map","C","text","options","ast","length","jsonParse","syntaxError2","stack","variableToType","variablesAST","errors","variableName","validateVariables"],"sourceRoot":""}